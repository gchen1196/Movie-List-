import MovieList from './movielist.js';
import Data from '../data.js';
import Search from './search.js';
import Add from './add.js';

// Add a search bar so that a user may see if a movie is in the list.
// After a user submits the search, display all matches (or partial matches) to that title.
// Bonus: Handle the case of "no movie by that name found" gracefully.
class App extends React.Component {
	constructor(props) {
		super(props);

		//initialize movies list is to show all movies
		this.state = {
			movies: Data,
			movie: null
			//need to bind this to getTextInput so this refers to App 
		};this.getTextInput = this.getTextInput.bind(this);
	}
	//need to create a function to pass down to search as prop that will have access to input text

	getTextInput(text) {
		console.log('APP HAS ACCESS TO', text);
		//'this' works here because of bind 
		this.setState({ movie: text });
	}

	render() {
		return React.createElement(
			'div',
			null,
			React.createElement(
				'div',
				{ className: 'ui container', style: { marginTop: '10px' } },
				React.createElement(Add, null)
			),
			React.createElement(
				'div',
				{ className: 'ui container', style: { marginTop: '20px' } },
				React.createElement(Search, { cbText: this.getTextInput })
			),
			React.createElement(MovieList, { movies: this.state.movies, movie: this.state.movie })
		);
	}
}

export default App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2FwcC5qc3giXSwibmFtZXMiOlsiTW92aWVMaXN0IiwiRGF0YSIsIlNlYXJjaCIsIkFkZCIsIkFwcCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwibW92aWVzIiwibW92aWUiLCJnZXRUZXh0SW5wdXQiLCJiaW5kIiwidGV4dCIsImNvbnNvbGUiLCJsb2ciLCJzZXRTdGF0ZSIsInJlbmRlciIsIm1hcmdpblRvcCJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsU0FBUCxNQUFzQixnQkFBdEI7QUFDQSxPQUFPQyxJQUFQLE1BQWlCLFlBQWpCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixhQUFuQjtBQUNBLE9BQU9DLEdBQVAsTUFBZ0IsVUFBaEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTUMsR0FBTixTQUFrQkMsTUFBTUMsU0FBeEIsQ0FBa0M7QUFDakNDLGFBQVlDLEtBQVosRUFBbUI7QUFDbEIsUUFBTUEsS0FBTjs7QUFFQTtBQUNBLE9BQUtDLEtBQUwsR0FBYTtBQUNaQyxXQUFRVCxJQURJO0FBRVpVLFVBQU87QUFFUjtBQUphLEdBQWIsQ0FLQSxLQUFLQyxZQUFMLEdBQW9CLEtBQUtBLFlBQUwsQ0FBa0JDLElBQWxCLENBQXVCLElBQXZCLENBQXBCO0FBQ0E7QUFDRDs7QUFFQUQsY0FBYUUsSUFBYixFQUFtQjtBQUNsQkMsVUFBUUMsR0FBUixDQUFZLG1CQUFaLEVBQWlDRixJQUFqQztBQUNBO0FBQ0EsT0FBS0csUUFBTCxDQUFjLEVBQUNOLE9BQU9HLElBQVIsRUFBZDtBQUNBOztBQUVESSxVQUFTO0FBQ1IsU0FDQztBQUFBO0FBQUE7QUFDQztBQUFBO0FBQUEsTUFBSyxXQUFVLGNBQWYsRUFBOEIsT0FBTyxFQUFDQyxXQUFXLE1BQVosRUFBckM7QUFDQyx3QkFBQyxHQUFEO0FBREQsSUFERDtBQUlDO0FBQUE7QUFBQSxNQUFLLFdBQVUsY0FBZixFQUE4QixPQUFPLEVBQUNBLFdBQVcsTUFBWixFQUFyQztBQUNDLHdCQUFDLE1BQUQsSUFBUSxRQUFRLEtBQUtQLFlBQXJCO0FBREQsSUFKRDtBQU9DLHVCQUFDLFNBQUQsSUFBVyxRQUFRLEtBQUtILEtBQUwsQ0FBV0MsTUFBOUIsRUFBc0MsT0FBTyxLQUFLRCxLQUFMLENBQVdFLEtBQXhEO0FBUEQsR0FERDtBQVdBO0FBaENnQzs7QUFtQ2xDLGVBQWVQLEdBQWYiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1vdmllTGlzdCBmcm9tICcuL21vdmllbGlzdC5qcyc7XG5pbXBvcnQgRGF0YSBmcm9tICcuLi9kYXRhLmpzJztcbmltcG9ydCBTZWFyY2ggZnJvbSAnLi9zZWFyY2guanMnO1xuaW1wb3J0IEFkZCBmcm9tICcuL2FkZC5qcyc7XG5cbi8vIEFkZCBhIHNlYXJjaCBiYXIgc28gdGhhdCBhIHVzZXIgbWF5IHNlZSBpZiBhIG1vdmllIGlzIGluIHRoZSBsaXN0LlxuLy8gQWZ0ZXIgYSB1c2VyIHN1Ym1pdHMgdGhlIHNlYXJjaCwgZGlzcGxheSBhbGwgbWF0Y2hlcyAob3IgcGFydGlhbCBtYXRjaGVzKSB0byB0aGF0IHRpdGxlLlxuLy8gQm9udXM6IEhhbmRsZSB0aGUgY2FzZSBvZiBcIm5vIG1vdmllIGJ5IHRoYXQgbmFtZSBmb3VuZFwiIGdyYWNlZnVsbHkuXG5jbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblx0XG5cdFx0Ly9pbml0aWFsaXplIG1vdmllcyBsaXN0IGlzIHRvIHNob3cgYWxsIG1vdmllc1xuXHRcdHRoaXMuc3RhdGUgPSB7XG5cdFx0XHRtb3ZpZXM6IERhdGEsIFxuXHRcdFx0bW92aWU6IG51bGxcblx0XHR9XG5cdFx0Ly9uZWVkIHRvIGJpbmQgdGhpcyB0byBnZXRUZXh0SW5wdXQgc28gdGhpcyByZWZlcnMgdG8gQXBwIFxuXHRcdHRoaXMuZ2V0VGV4dElucHV0ID0gdGhpcy5nZXRUZXh0SW5wdXQuYmluZCh0aGlzKTtcblx0fVxuXHQvL25lZWQgdG8gY3JlYXRlIGEgZnVuY3Rpb24gdG8gcGFzcyBkb3duIHRvIHNlYXJjaCBhcyBwcm9wIHRoYXQgd2lsbCBoYXZlIGFjY2VzcyB0byBpbnB1dCB0ZXh0XG5cdFxuXHRnZXRUZXh0SW5wdXQodGV4dCkge1xuXHRcdGNvbnNvbGUubG9nKCdBUFAgSEFTIEFDQ0VTUyBUTycsIHRleHQpO1xuXHRcdC8vJ3RoaXMnIHdvcmtzIGhlcmUgYmVjYXVzZSBvZiBiaW5kIFxuXHRcdHRoaXMuc2V0U3RhdGUoe21vdmllOiB0ZXh0fSlcblx0fVxuXHRcblx0cmVuZGVyKCkge1xuXHRcdHJldHVybiAoXG5cdFx0XHQ8ZGl2PlxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ndWkgY29udGFpbmVyJyBzdHlsZT17e21hcmdpblRvcDogJzEwcHgnfX0+XG5cdFx0XHRcdFx0PEFkZC8+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ndWkgY29udGFpbmVyJyBzdHlsZT17e21hcmdpblRvcDogJzIwcHgnfX0+XG5cdFx0XHRcdFx0PFNlYXJjaCBjYlRleHQ9e3RoaXMuZ2V0VGV4dElucHV0fS8+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8TW92aWVMaXN0IG1vdmllcz17dGhpcy5zdGF0ZS5tb3ZpZXN9IG1vdmllPXt0aGlzLnN0YXRlLm1vdmllfS8+XG5cdFx0XHQ8L2Rpdj5cblx0XHQpXG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBwOyAiXX0=